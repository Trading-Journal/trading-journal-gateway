name: Build and Publish Docker Image

on:
  push:
    branches: [master]

env:
  APP_NAME: trading-journal-gateway
  NAMESPACE: trading-journal
  CONTEXT: trading-journal

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      app-version: ${{ steps.build-version.outputs.APP_VERSION }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Get Project Version
        run: echo "APP_VERSION=$(mvn --file pom.xml -q -Dexec.executable=echo -Dexec.args='${project.version}' --non-recursive exec:exec)" >> "$GITHUB_OUTPUT"
        id: build-version
      - name: Create Tag
        uses: negz/create-tag@v1
        with:
          version: ${{ steps.build-version.outputs.APP_VERSION }}
          token: ${{ secrets.PACKAGE_TOKEN }}

  docker:
    name: Docker Build and Push
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - name: Docker Login
      run: echo ${{ secrets.DOCKER_PASS }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
    - name: Docker Build Native Image
      run: mvn spring-boot:build-image -Pnative
    - name: Push Version
      run: docker push allanweber/$APP_NAME:${{needs.build.outputs.app-version}}
    - name: Tag Latest
      run: docker tag allanweber/$APP_NAME:${{needs.build.outputs.app-version}} allanweber/$APP_NAME:latest
    - name: Push Latest
      run: docker push allanweber/$APP_NAME:latest

  deploy:
    name: Deploy on PRD
    runs-on: ubuntu-latest
    needs: [build, docker]
    steps:
      - name: Deploy Image
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          KUBE_CONTEXT: ${{ env.CONTEXT }}
        with:
          args: set image deployment ${{ env.APP_NAME }} ${{ env.APP_NAME }}=allanweber/${{ env.APP_NAME }}:${{needs.build.outputs.app-version}} -n ${{ env.NAMESPACE }} --record=true
      - name: Check Image Rollout
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
          KUBE_CONTEXT: ${{ env.CONTEXT }}
        with:
          args: rollout status deployment/${{ env.APP_NAME }} -n ${{ env.NAMESPACE }}
